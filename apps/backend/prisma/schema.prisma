generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  role         Role     @default(STUDENT)
  profileMeta  Json?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  transactions Transaction[]
  goals        Goal[]
  progresses   Progress[]
}

model Transaction {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  type      TransactionType
  amount    Int
  category  String
  date      DateTime
  notes     String?
  createdAt DateTime @default(now())
}

model Goal {
  id           String   @id @default(uuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  targetAmount Int
  savedAmount  Int      @default(0)
  deadline     DateTime?
  status       GoalStatus @default(ACTIVE)
  createdAt    DateTime @default(now())
}

model Lesson {
  id             String   @id @default(uuid())
  title          String
  contentType    ContentType
  contentRef     String
  unlockCondition Json?
  createdAt      DateTime @default(now())

  progresses     Progress[]
}

model Course {
  id           String   @id @default(uuid())
  title        String
  description  String
  instructor   User     @relation(fields: [instructorId], references: [id])
  instructorId String
  price        Int?
  published    Boolean  @default(false)
  videoRefs    String[]
  createdAt    DateTime @default(now())

  progresses   Progress[]
}

model Progress {
  id             String   @id @default(uuid())
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  course         Course?  @relation(fields: [courseId], references: [id])
  courseId       String?
  lesson         Lesson?  @relation(fields: [lessonId], references: [id])
  lessonId       String?
  completedAt    DateTime?
  percentComplete Int     @default(0)
}

enum Role {
  STUDENT
  ADMIN
  INSTRUCTOR
}

enum TransactionType {
  INCOME
  EXPENSE
  SAVINGS
}

enum GoalStatus {
  ACTIVE
  PAUSED
  COMPLETED
}

enum ContentType {
  TEXT
  VIDEO
}
